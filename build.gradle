import com.github.spotbugs.SpotBugsTask
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id "java-library"
	id "maven-publish"
	id "checkstyle"
	id "pmd"
	id "com.github.spotbugs" version "3.0.0"
	id "net.ltgt.errorprone" version "1.1.1"
	id "jacoco"
}

group = "com.therandomlabs.changeloggenerator"
version = "2.0.0-pre2"

repositories {
	mavenCentral()

	maven {
		url "https://jitpack.io"
	}
}

dependencies {
	implementation "com.google.guava:guava:28.2-jre"

	implementation "org.slf4j:slf4j-api:2.0.0-alpha1"
	implementation "org.apache.logging.log4j:log4j-core:2.13.0"
	implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0"

	implementation "com.atlassian.commonmark:commonmark:0.13.1"

	api "com.github.TheRandomLabs:CurseAPI:master-SNAPSHOT"
	api "com.github.TheRandomLabs:CurseAPI-Minecraft:master-SNAPSHOT"

	testImplementation "com.github.TheRandomLabs:TRLUtils-IO:master-SNAPSHOT"

	testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0-M1"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.0-M1"
	testImplementation "org.assertj:assertj-core:3.14.0"

	spotbugsPlugins "com.mebigfatguy.fb-contrib:fb-contrib:7.4.3.sb"
	spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1"
	spotbugsPlugins "jp.skypencil.findbugs.slf4j:bug-pattern:1.5.0@jar"

	errorprone "com.google.errorprone:error_prone_core:2.3.4"
	errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = "CLASS"
			excludes = [
					"com.therandomlabs.changeloggenerator.ChangelogEntry",
					"com.therandomlabs.changeloggenerator.Main"
			]

			limit {
				counter = "INSTRUCTION"
				value = "COVEREDRATIO"
				minimum = 0.8
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

pmd {
	ruleSets = []
	ruleSetConfig = resources.text.fromFile("config/pmd.xml")
}

spotbugs {
	excludeFilter = file("config/spotbugs-exclude.xml")
}

tasks.withType(SpotBugsTask) {
	reports {
		xml.enabled false
		html.enabled true
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.compilerArgs << "-Xlint:all"
}

task processSource(type: Sync) {
    from sourceSets.main.java
    inputs.property "version", version
    filter(ReplaceTokens, tokens: [VERSION: version])
    into "$buildDir/src"
}

compileJava {
    source = processSource.outputs
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	archiveClassifier.set("javadoc")
	from javadoc
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

jar {
	manifest {
		attributes "Main-Class": "com.therandomlabs.changeloggenerator.Main"
	}

	from {
		configurations.runtimeClasspath.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/TheRandomLabs/ChangelogGenerator")

			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
			}
		}
	}

	publications {
		gpr(MavenPublication) {
			artifact sourcesJar
			artifact javadocJar
			from components.java
		}
	}
}
